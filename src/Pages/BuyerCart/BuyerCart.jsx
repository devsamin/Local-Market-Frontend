import React, { useState } from "react";
import { FiMinus, FiPlus, FiTrash2, FiBox, FiX } from "react-icons/fi";

const BuyerCart = () => {
  const [showModal, setShowModal] = useState(false);
  const [step, setStep] = useState(1);

  const cartItems = [
    {
      id: 1,
      title: "Samsung Smart TV 43‚Äù",
      category: "electronics",
      image: "https://via.placeholder.com/120x80.png?text=TV",
      price: 45000,
      quantity: 1,
    },
    {
      id: 2,
      title: "Cotton T-Shirt",
      category: "clothing",
      image: "https://via.placeholder.com/120x80.png?text=T-Shirt",
      price: 800,
      quantity: 1,
    },
  ];

  const subtotal = cartItems.reduce((sum, i) => sum + i.price * i.quantity, 0);
  const deliveryCharge = 60;
  const discount = 0;
  const total = subtotal + deliveryCharge - discount;

  return (
    <div className="bg-gray-50 min-h-screen px-4 md:px-10 py-8">
      <div className="max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Left Section */}
        <div className="lg:col-span-2 bg-white rounded-2xl shadow-sm border p-6">
          <h2 className="text-2xl font-bold mb-2">üõí ‡¶∂‡¶™‡¶ø‡¶Ç ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü</h2>
          <p className="text-gray-500 mb-5">{cartItems.length} ‡¶ü‡¶ø ‡¶™‡¶£‡ßç‡¶Ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶ø‡¶§</p>

          <div className="space-y-4">
            {cartItems.map((item) => (
              <div
                key={item.id}
                className="flex flex-col sm:flex-row justify-between items-center border rounded-xl p-4 hover:shadow-md transition"
              >
                <div className="flex items-center gap-4 w-full sm:w-auto">
                  <img
                    src={item.image}
                    alt={item.title}
                    className="w-24 h-24 object-cover rounded-lg border"
                  />
                  <div>
                    <h3 className="text-lg font-semibold">{item.title}</h3>
                    <p className="text-sm text-gray-500">
                      ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø:{" "}
                      <span className="font-medium text-gray-700">
                        {item.category}
                      </span>
                    </p>
                  </div>
                </div>

                <div className="flex items-center justify-between sm:justify-end gap-4 w-full sm:w-auto mt-4 sm:mt-0">
                  <div className="flex items-center border rounded-lg px-3 py-1">
                    <button className="p-1 text-gray-600 hover:text-black">
                      <FiMinus />
                    </button>
                    <span className="mx-3 font-medium">{item.quantity}</span>
                    <button className="p-1 text-gray-600 hover:text-black">
                      <FiPlus />
                    </button>
                  </div>
                  <p className="text-lg font-semibold text-gray-800">
                    ‡ß≥{item.price * item.quantity}
                  </p>
                  <button className="text-red-500 hover:text-red-700">
                    <FiTrash2 />
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Right Section */}
        <div className="bg-white lg:bg-[#0f172a] text-gray-900 lg:text-white rounded-2xl shadow-sm border p-6">
          <h3 className="text-xl font-semibold mb-4 flex items-center gap-2">
            <FiBox /> ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶Æ‡¶æ‡¶∞‡¶ø
          </h3>

          <div className="bg-white/10 p-4 rounded-lg mb-4 border border-gray-300/30 text-gray-900 lg:text-gray-100">
            <div className="flex justify-between mb-2">
              <span>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶ø‡¶§ ‡¶™‡¶£‡ßç‡¶Ø</span>
              <span>{cartItems.length} ‡¶ü‡¶ø</span>
            </div>
            {cartItems.map((i) => (
              <div
                key={i.id}
                className="flex justify-between text-sm text-gray-400"
              >
                <span>{i.title}</span>
                <span>‡ß≥{i.price}</span>
              </div>
            ))}
          </div>

          <div className="space-y-2 text-gray-300">
            <div className="flex justify-between">
              <span>‡¶∏‡¶æ‡¶¨‡¶ü‡ßã‡¶ü‡¶æ‡¶≤</span>
              <span>‡ß≥{subtotal}</span>
            </div>
            <div className="flex justify-between">
              <span>‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú</span>
              <span>‡ß≥{deliveryCharge}</span>
            </div>
            <div className="flex justify-between text-green-400">
              <span>‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü</span>
              <span>-‡ß≥{discount}</span>
            </div>
            <hr className="border-gray-700 my-3" />
            <div className="flex justify-between text-lg font-bold text-white">
              <span>‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü</span>
              <span>‡ß≥{total}</span>
            </div>
          </div>

          <div className="mt-5">
            <button
              onClick={() => setShowModal(true)}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 rounded-xl transition"
            >
              ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
            </button>
          </div>
        </div>
      </div>

      {/* Checkout Modal */}
      {showModal && (
        <div className="fixed inset-0 flex items-center justify-center bg-black/50 z-50">
          <div className="bg-white w-full max-w-2xl rounded-2xl shadow-lg relative p-6 overflow-y-auto max-h-[90vh]">
            <button
              onClick={() => setShowModal(false)}
              className="absolute top-4 right-4 text-gray-500 hover:text-black"
            >
              <FiX size={20} />
            </button>

            <h2 className="text-xl font-semibold mb-2">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®</h2>
            <p className="text-gray-500 mb-4">
              ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
            </p>

            {/* Step Indicator */}
            <div className="flex items-center justify-between mb-6">
              {["‡¶§‡¶•‡ßç‡¶Ø", "‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü", "‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§‡¶ï‡¶∞‡¶£"].map((label, index) => {
                const stepNumber = index + 1;
                const active = step === stepNumber;
                return (
                  <div key={index} className="flex items-center gap-2">
                    <div
                      className={`w-8 h-8 flex items-center justify-center rounded-full font-bold ${
                        active
                          ? "bg-blue-600 text-white"
                          : "bg-gray-200 text-gray-600"
                      }`}
                    >
                      {stepNumber}
                    </div>
                    <span
                      className={`font-medium ${
                        active ? "text-blue-600" : "text-gray-500"
                      }`}
                    >
                      {label}
                    </span>
                    {index < 2 && (
                      <div className="w-10 h-[2px] bg-gray-300 mx-2"></div>
                    )}
                  </div>
                );
              })}
            </div>

            {/* Step Content */}
            {step === 1 && (
              <div>
                <h3 className="text-lg font-semibold mb-3">‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                  <input
                    type="text"
                    placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ"
                    className="border rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 outline-none"
                  />
                  <input
                    type="text"
                    placeholder="‡ß¶‡ßß‡ßßxxxxxxxx"
                    className="border rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 outline-none"
                  />
                  <input
                    type="email"
                    placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ (‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï)"
                    className="border rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 outline-none"
                  />
                  <input
                    type="text"
                    placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶∞‡¶ø‡ßü‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®"
                    className="border rounded-lg p-3 w-full focus:ring-2 focus:ring-blue-500 outline-none"
                  />
                </div>

                <h4 className="font-semibold mb-2">‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø</h4>
                <div className="space-y-2 mb-3">
                  <label className="flex items-center gap-2 border p-3 rounded-lg cursor-pointer hover:border-blue-500">
                    <input type="radio" name="delivery" />
                    <span>‡¶π‡ßã‡¶Æ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø - ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ‡¶Ø‡¶º ‡¶™‡ßå‡¶Å‡¶õ‡ßá ‡¶¶‡ßá‡¶Ø‡¶º‡¶æ ‡¶π‡¶¨‡ßá ‡ß≥‡ß¨‡ß¶</span>
                  </label>
                  <label className="flex items-center gap-2 border p-3 rounded-lg cursor-pointer hover:border-blue-500">
                    <input type="radio" name="delivery" />
                    <span>‡¶®‡¶ø‡¶ú‡ßá ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡¶® - ‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶ú‡ßá ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßÅ‡¶®</span>
                  </label>
                </div>

                <textarea
                  placeholder="‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
                  rows="3"
                  className="w-full border rounded-lg p-3 focus:ring-2 focus:ring-blue-500 outline-none"
                ></textarea>
              </div>
            )}

            {step === 2 && (
              <div>
                <h3 className="text-lg font-semibold mb-3">‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶§‡¶•‡ßç‡¶Ø</h3>
                <div className="space-y-3">
                  <label className="flex items-center gap-2 border p-3 rounded-lg cursor-pointer hover:border-blue-500">
                    <input type="radio" name="payment" />
                    <span>‡¶ï‡ßç‡¶Ø‡¶æ‡¶∂ ‡¶Ö‡¶® ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø</span>
                  </label>
                  <label className="flex items-center gap-2 border p-3 rounded-lg cursor-pointer hover:border-blue-500">
                    <input type="radio" name="payment" />
                    <span>‡¶¨‡¶ø‡¶ï‡¶æ‡¶∂ / ‡¶®‡¶ó‡¶¶ / ‡¶∞‡¶ï‡ßá‡¶ü</span>
                  </label>
                </div>
              </div>
            )}

            {step === 3 && (
              <div className="text-center py-6">
                <h3 className="text-xl font-semibold text-green-600 mb-3">
                  ‚úÖ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!
                </h3>
                <p className="text-gray-600">
                  ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡¶ü‡¶ø ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§
                </p>
              </div>
            )}

            {/* Navigation Buttons */}
            <div className="flex justify-between mt-6">
              {step > 1 ? (
                <button
                  onClick={() => setStep(step - 1)}
                  className="px-5 py-2 rounded-lg border font-semibold hover:bg-gray-100"
                >
                  ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶ß‡¶æ‡¶™
                </button>
              ) : (
                <div></div>
              )}
              {step < 3 ? (
                <button
                  onClick={() => setStep(step + 1)}
                  className="px-5 py-2 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700"
                >
                  ‡¶™‡¶∞‡ßá‡¶∞ ‡¶ß‡¶æ‡¶™
                </button>
              ) : (
                <button
                  onClick={() => setShowModal(false)}
                  className="px-5 py-2 bg-green-600 text-white rounded-lg font-semibold hover:bg-green-700"
                >
                  ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default BuyerCart;
